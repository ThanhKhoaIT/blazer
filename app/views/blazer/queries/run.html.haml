- if @error
  .alert.alert-danger= @error.first(200)
- elsif !@success
  - if @only_chart
    %p.text-muted Select variables
  - else
    .alert.alert-info Can’t preview queries with variables...yet!
- else
  - unless @only_chart
    - if @cached_at || @just_cached
      %p.text-muted{style: "float: right;"}
        - if @cached_at
          Cached #{time_ago_in_words(@cached_at, include_seconds: true)} ago
        - elsif !params[:data_source]
          Cached just now
          - if @data_source.cache_mode == "slow"
            (over #{"%g" % @data_source.cache_slow_threshold}s)
        - if @query && !params[:data_source]
          = link_to "Refresh", refresh_query_path(@query, variable_params), method: :post
  - if @forecast_error
    .alert.alert-danger= @forecast_error
  - if @rows.any?
    #main-chart
      = render 'chart', rows: @rows, columns: @columns, result: @result, forecast: @forecast, only_chart: @only_chart, boom: @boom
    - if blazer_maps? && @markers.any?
      #map{style: "height: 500px; width: 100%"}
      :javascript
        $('#map').html('');
        L.mapbox.accessToken = '#{Blazer.mapbox_access_token}';
        var map = L.mapbox.map('map', 'ankane.ioo8nki0');
        #{blazer_js_var "markers", @markers}
        var featureLayer = L.mapbox.featureLayer().addTo(map);
        var geojson = [];
        for (var i = 0; i < markers.length; i++) {
          var marker = markers[i];
          geojson.push({
            type: 'Feature',
            geometry: {
              type: 'Point',
              coordinates: [
                marker.longitude,
                marker.latitude
              ]
            },
            properties: {
              description: marker.title,
              'marker-color': '#f86767',
              'marker-size': 'medium'
            }
          });
        }
        featureLayer.setGeoJSON(geojson);
        map.fitBounds(featureLayer.getBounds());
        map.setZoom(5)._onResize();
    - elsif @no_chart
      :javascript
        $('#chart-tab').hide();
        $('#table-tab').click();

    - unless @only_chart && !@no_chart
      - header_width = 100 / @columns.size.to_f
      .results-container
        - if @columns == ["QUERY PLAN"]
          %pre
            %code= @rows.map { |r| r[0] }.join("\n")
        - elsif @columns == ["PLAN"] && @data_source.adapter == "druid"
          %pre
            %code= @rows[0][0]
        - else
          %p.text-muted{style: "margin-bottom: 10px; margin-top: 15px"}
            = pluralize(@rows.size, "row")
            - @checks.select(&:state).each do |check|
              ·
              %small{:class => "check-state #{check.state.parameterize.gsub("-", "_")}"}= link_to check.state.upcase, edit_check_path(check)
              - if check.try(:message)
                · #{check.message}
            - if @query && @result.forecastable? && !params[:forecast]
              ·
              \#{link_to "Forecast", query_path(@query, {forecast: "t"}.merge(variable_params))}
            %span.pull-right
              - if (1..preview_rows_number).cover?(@rows.size)
                = link_to 'Copy to clipboard', '#results-table', class: 'click2CopyTable btn btn-xs btn-info'

          - if @rows.size > preview_rows_number
            %hr
            %h4.text-center.text-info
              %strong Notice: Now we show maximum is #{preview_rows_number} rows for preview
            %hr
          .scroll-content
            %table#results-table.table.results-table
              %thead
                %tr
                  - @columns.each_with_index do |key, i|
                    - type = @column_types[i]
                    - summany_popup = type.in?(['float', 'int']) && !key.end_with?('id')
                    %th{"data-popup" => summany_popup, "data-sort" => type, style: "width: #{header_width}%;"}
                      %div{style: "min-width: #{@min_width_types.include?(i) ? 180 : 60}px;"}
                        = key
              %tbody
                - @rows.first(preview_rows_number).each do |row|
                  %tr
                    - row.each_with_index do |v, i|
                      - k = @columns[i]
                      %td
                        - if v.is_a?(Time)
                          - v = blazer_time_value(@data_source, k, v)
                        - unless v.nil?
                          - if v.is_a?(String) && v == ""
                            .text-muted empty string
                          - elsif @linked_columns[k]
                            = link_to blazer_format_value(k, v), @linked_columns[k].gsub("{value}", u(v.to_s)), target: "_blank"
                          - else
                            = blazer_format_value(k, v)
                        - if v2 = (@boom[k] || {})[v.nil? ? v : v.to_s]
                          .text-muted= v2
  - else
    %p.text-muted.text-center{style: "margin-top: 15px"} No rows

:javascript
  $('#main-chart').appendTo('#chart');
  $('#map').appendTo('#chart');
